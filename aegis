#!/usr/bin/env python3

import os
from require.compresser import compresser_tar_gz, decompresser_tar_gz
from require.crypthaes import crypth_file, decrypt_file
import argparse
import base64

def main():
    parser = argparse.ArgumentParser(description="Copier le contenu d'un fichier source vers un fichier de destination.")
    parser.add_argument('fichier_source', type=str, help='Le chemin du fichier source. "fichier source"')
    args = parser.parse_args()

    print(f"Fichier source : {args.fichier_source}")

    arrFile = args.fichier_source.split('.')
    if arrFile[-1] == 'aegis':
        key_pass = input("Entrez la clé de déchiffrement : ")
        try:
            key_bytes = base64.b64decode(key_pass.encode('utf-8'))
        except base64.binascii.Error as e:
            print(f"Erreur de décodage de la clé : {e}")
            return
        
        if len(key_bytes) not in [16, 24, 32]:
            print("Erreur : la clé doit être de 16, 24 ou 32 bytes après décodage.")
            return
        
        file_name = '.'.join(arrFile[:-1])
        decrypt_file(args.fichier_source, file_name + '.tar.gz', key_bytes)
        decompresser_tar_gz(file_name + '.tar.gz', '_decrypted_' + file_name)
        os.remove(file_name + '.tar.gz')
    else:
        print("Entrez la clé de chiffrement de 32 bytes (ou appuyez sur Entrée pour générer automatiquement) : ")
        key_pass = input("=> ")
        if key_pass:
            try:
                key_bytes = base64.b64decode(key_pass.encode('utf-8'))
            except base64.binascii.Error as e:
                print(f"Erreur de décodage de la clé : {e}")
                return
            
            if len(key_bytes) not in [16, 24, 32]:
                print("Erreur : la clé doit être de 16, 24 ou 32 bytes après décodage.")
                return
        else:
            key_bytes = os.urandom(32)
        print(f"Compression du fichier {args.fichier_source}...")
        compresser_tar_gz(args.fichier_source, args.fichier_source + '.tar.gz')
        print(f"Chiffrement du fichier {args.fichier_source}.tar.gz...")
        crypth_file(args.fichier_source + '.tar.gz', args.fichier_source + '.aegis', key_bytes)
        print(f"Suppression du fichier compressé {args.fichier_source}.tar.gz...")
        os.remove(args.fichier_source + '.tar.gz')
        if os.path.exists(args.fichier_source + '.aegis.iv'):
            key_pass = base64.b64encode(key_bytes).decode('utf-8')
            print(f"Clé de chiffrement (en base64): \033[92m{key_pass}\033[0m")
            print(f'\033[91mLe fichier {args.fichier_source}.iv doit être placé dans le même dossier que le fichier {args.fichier_source}.aegis pour le déchiffrer\033[0m')
        else:
            print(f"\033[91mErreur de chiffrement !\033[0m")

if __name__ == "__main__":
    main()
