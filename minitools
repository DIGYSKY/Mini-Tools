#!/bin/bash

# Define the version of Mini-Tools
VERSION=$(cat version)

# Function to display the version
show_version() {
    echo "Mini-Tools version $VERSION"
}

# Function to display help
show_help() {
    echo "Usage: minitools [options]"
    echo
    echo "Options:"
    echo "  -v, --version        Display the version of Mini-Tools"
    echo "  -l, --list-tools     List available tools and unavailable tools"
    echo "  -up, --update        Update Mini-Tools from the repository"
    echo "  -h, --help           Display this help"
}

# Function to list available tools
list_tools() {
    local script_dir
    script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    if [[ -f "$script_dir/mini_tools_list.txt" ]]; then
        printf "%-30s %-20s %-10s %-50s\n" "Tool" "Command" "Version" "Description"
        printf "%-30s %-20s %-10s %-50s\n" "----" "--------" "-------" "-----------"
        while IFS= read -r tool; do
            name=$(echo "$tool" | awk -F' ' '{print $1}')
            file=$(echo "$tool" | awk -F'"' '{print $2}')
            version=$(echo "$tool" | awk -F'[()]' '{print $2}')
            description=$(echo "$tool" | awk -F'[][]' '{print $2}' | fold -s -w 50)
            first_line=true
            while IFS= read -r line; do
                if $first_line; then
                    if [[ -f "$script_dir/$file" ]]; then
                        printf "\e[32m%-30s\e[0m %-20s %-10s %-50s\n" "$name" "$file" "$version" "$line"
                    else
                        printf "\e[31m%-30s\e[0m %-20s %-10s %-50s\n" "$name" "$file" "$version" "$line"
                    fi
                    first_line=false
                else
                    printf "%-30s %-20s %-10s %-50s\n" "" "" "" "$line"
                fi
            done <<< "$description"
            printf "\n"
        done < "$script_dir/mini_tools_list.txt"
        printf "\e[32mAvailable tools\e[0m\n"
        printf "\e[31mUnavailable tools\e[0m\n"
    else
        echo "Le fichier mini_tools_list.txt est introuvable."
    fi
}

# Function to update Mini-Tools from the repository
update_tools() {
    local repo_url="https://github.com/DIGYSKY/Mini-Tools.git"
    local script_dir
    script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    echo "Vérification de la version actuelle de Mini-Tools..."
    local current_version
    if [[ -f "$script_dir/version" ]]; then
        current_version=$(cat "$script_dir/version")
        echo "Version actuelle: $current_version"
    else
        echo "Fichier de version local introuvable."
    fi
    
    echo "Récupération de la version du dépôt..."
    local repo_version
    repo_version=$(curl -s https://raw.githubusercontent.com/DIGYSKY/Mini-Tools/main/version)
    if [[ -n "$repo_version" ]]; then
        echo "Version du dépôt: $repo_version"
    else
        echo "Impossible de récupérer le fichier de version du dépôt."
    fi
    
    if [[ "$current_version" != "$repo_version" ]]; then
        read -p "Une nouvelle version ($repo_version) est disponible. Voulez-vous mettre à jour Mini-Tools ? (Y/n) " confirm
        if [[ "$confirm" == "Y" || "$confirm" == "y" || "$confirm" == "" ]]; then
            echo "Mise à jour de Mini-Tools depuis $repo_url dans le répertoire $script_dir"
            cd "$script_dir" || { echo "Impossible de changer de répertoire vers $script_dir"; exit 1; }
            git pull "$repo_url"
            if [[ $? -eq 0 ]]; then
                echo "Mise à jour réussie."
                ./install_MiniTools
            else
                echo "Échec de la mise à jour."
            fi
        else
            echo "Mise à jour annulée."
        fi
    else
        echo "Vous avez déjà la dernière version de Mini-Tools ($current_version)."
    fi
}

# Parse command line arguments
case "$1" in
    -v|--version)
        show_version
        ;;
    -l|--list-tools)
        list_tools
        ;;
    -up|--update)
        update_tools
        ;;
    -h|--help)
        show_version
        echo
        show_help
        ;;
    *)
        show_version
        echo
        show_help
        ;;
esac
